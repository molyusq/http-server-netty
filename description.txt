SimpleHttpServer - власне http-сервер.
В методі run() спочатку створюються 2 EventLoopGroup, що дозволяють реєструвати канали для подальшої їх обробки в EventLoop'ах.
Створюється бос-група, що реєструє канал та група-робітник, що обробляє трафік зареєстрованого бос-групою каналу.
Після цього відбувається налаштування серверу за допомогою ServerBootstrap(вказання робочої та бос-групи, типу каналу та обробника новостворених каналів) та вказівка серверу "слухати" порт 8080.

SimpleHttpServerInitializer - спеціальний обробник, що вказує як потрібно обробити новий канал.
Містить метод initChannel(SocketChannel channel), в якому створюється ряд обробників, що будуть задіяні при використанні каналу.
HttpServerCodec - обробник, що дозволяє опрацьовувати http-запити та відповіді за спрощеною схемою.
ChannelTrafficShapingHandler - обробник трафіку, що проходить через канал, містить TrafficCounter, що слугує для надання статистичної інформації про передачу даних по каналу.
SimpleHttpServerHandler - розроблений обробник, що опрацьовує запити та на їх основі формує відповіді.

SimpleHttpServerHandler - створений обробник.
Метод channelRead0(ChannelHandlerContext channelHandlerContext, Object message) - обробка запитів клієнта та формування відповідно до запиту певної відповіді.
Опрацьовуються запити /status, /hello, /redirect?url=<url>, ігноруються запити /favicon.ico.
Після формування відповіді, вона записується в буфер для передачі по каналу, після чого буфер скидається та відповідь надходить до клієнта.
Параметр message - будь-яке повідомлення від клієнта, в даному випадку обробляються лише http-запити, channelHandlerContext довзоляє обробнику канала повідомляти інших обробників канала про будь-які зміни.

Також наявний ряд методів для формування відповідей у вигляді html-сторінки.

Пакет util містить ряд класів, створених для полегшення формування статистики серверу за запитом /status про переадресації, з'єднання та кількість і специфіку клієнтських запитів відповідно.